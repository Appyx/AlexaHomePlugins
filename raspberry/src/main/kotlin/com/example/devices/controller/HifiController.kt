package com.example.devices.controller

import at.rgstoettner.alexahome.plugin.v2.OnOff
import at.rgstoettner.alexahome.plugin.v2.Percentage
import at.rgstoettner.alexahome.plugin.v2.V2Device
import at.rgstoettner.alexahome.plugin.v2.V2DeviceProvider
import com.example.devices.*

class HifiController : V2DeviceProvider {

    companion object {
        private val pause = "|250.0|"
        private val tuner = "3.425|1.669|0.446|0.395|0.443|0.398|0.453|1.230|0.445|0.396|0.444|1.222|0.434|0.442|0.474|1.190|0.442|0.400|0.438|0.402|0.446|1.236|0.445|0.396|0.443|0.398|0.436|1.250|0.440|1.239|0.450|0.390|0.445|0.396|0.445|0.395|0.443|0.398|0.446|0.394|0.446|0.395|0.443|1.211|0.514|0.362|0.404|1.273|0.441|0.398|0.439|0.402|0.441|1.241|0.446|1.236|0.443|0.398|0.439|1.244|0.448|1.235|0.449|1.233|0.451|0.390|0.450|0.390|0.445|0.396|0.441|0.399|0.447|0.457|0.385|0.390|0.494|0.338|0.452|1.244|0.449|0.392|0.439|0.402|0.442|1.241|0.442|1.240|0.448|0.392|0.444|0.397|0.439|1.244|0.450|1.237|0.449|0.387|0.452|74.718|3.433|1.671|0.439|0.402|0.439|0.403|0.440|1.242|0.437|0.406|0.438|1.242|0.435|0.406|0.441|1.246|0.435|0.401|0.440|0.401|0.436|1.246|0.442|0.399|0.443|0.418|0.482|1.203|0.410|1.249|0.438|0.403|0.445|0.400|0.432|0.404|0.447|0.400|0.429|0.406|0.444|0.397|0.439|1.243|0.441|0.399|0.437|1.245|0.449|0.392|0.444|0.396|0.448|1.235|0.448|1.242|0.408|0.425|0.490|1.194|0.449|1.233|0.448|1.235|0.452|0.389|0.447|0.394|0.441|0.399|0.444|0.396|0.438|0.404|0.441|0.400|0.446|0.395|0.449|1.234|0.443|0.397|0.445|0.396|0.448|1.235|0.455|1.203|0.541|0.343|0.483|0.330|0.448|1.244|0.443|1.239|0.445|0.395|0.447"
        private val source = "3.244|1.740|0.371|0.473|0.371|0.468|0.359|1.320|0.379|0.466|0.370|1.305|0.375|0.474|0.376|1.295|0.447|0.458|0.403|0.411|0.418|1.241|0.371|0.457|0.380|0.472|0.370|1.299|0.377|1.316|0.370|0.461|0.377|0.477|0.374|0.461|0.381|0.460|0.365|0.475|0.374|0.456|0.388|1.296|0.388|0.462|0.380|1.296|0.389|0.414|0.413|1.285|0.414|0.454|0.381|0.462|0.375|0.461|0.385|1.291|0.390|1.300|0.388|1.288|0.395|0.438|0.400|0.454|0.395|0.440|0.388|0.454|0.387|0.452|0.389|0.458|0.389|0.454|0.388|1.280|0.395|0.455|0.508|1.243|0.391|0.372|0.401|0.449|0.386|0.457|0.389|0.456|0.387|1.296|0.392|1.282|0.395|0.458|0.383|74.937|3.412|1.675|0.526|0.288|0.536|0.374|0.441|1.198|0.424|0.416|0.434|1.249|0.445|0.396|0.438|1.245|0.434|0.407|0.439|0.402|0.429|1.254|0.443|0.398|0.430|0.409|0.445|1.237|0.439|1.244|0.451|0.393|0.440|0.389|0.530|0.290|0.551|0.390|0.337|0.434|0.436|0.406|0.437|1.244|0.444|0.397|0.437|1.245|0.438|0.404|0.433|1.253|0.441|0.396|0.441|0.400|0.434|0.406|0.451|1.232|0.448|1.235|0.444|1.238|0.512|0.331|0.531|0.279|0.480|0.391|0.447|0.394|0.426|0.414|0.435|0.406|0.438|0.402|0.435|1.248|0.442|0.397|0.444|1.239|0.452|0.390|0.450|0.390|0.443|0.399|0.439|0.402|0.438|1.244|0.444|1.239|0.443|0.399|0.444"
        private val sdb = "3.488|1.634|0.467|0.375|0.450|0.391|0.451|1.232|0.449|0.392|0.447|1.235|0.451|0.390|0.447|1.236|0.448|0.393|0.447|0.394|0.448|1.234|0.449|0.392|0.453|0.388|0.446|1.236|0.448|1.234|0.441|0.405|0.438|0.397|0.450|0.392|0.449|0.392|0.443|0.397|0.446|0.395|0.450|1.232|0.449|0.392|0.450|1.232|0.455|0.386|0.450|1.237|0.450|0.386|0.450|0.391|0.452|0.389|0.449|0.392|0.455|0.386|0.451|0.390|0.449|0.392|0.454|1.229|0.442|1.245|0.448|0.389|0.454|0.387|0.452|0.389|0.444|0.396|0.444|1.238|0.454|0.387|0.453|0.388|0.450|1.232|0.454|0.387|0.455|0.391|0.444|1.234|0.452|0.389|0.448|0.393|0.453|0.388|0.442|74.515|3.444|1.662|0.449|0.393|0.447|0.393|0.445|1.238|0.449|0.393|0.447|1.239|0.447|0.390|0.440|1.242|0.448|0.393|0.449|0.392|0.459|1.224|0.434|0.405|0.450|0.391|0.448|1.235|0.458|1.224|0.454|0.387|0.449|0.391|0.451|0.390|0.454|0.386|0.450|0.391|0.448|0.392|0.449|1.233|0.453|0.389|0.449|1.237|0.447|0.389|0.446|1.238|0.453|0.386|0.454|0.388|0.450|0.391|0.454|0.387|0.451|0.390|0.451|0.389|0.448|0.393|0.450|1.239|0.449|1.228|0.456|0.385|0.451|0.390|0.449|0.391|0.453|0.388|0.451|1.231|0.455|0.386|0.445|0.397|0.451|1.236|0.446|0.390|0.448|0.392|0.453|1.229|0.450|0.391|0.449|0.392|0.449|0.392|0.443"
        private val mute = "3.501|1.624|0.474|0.366|0.468|0.373|0.456|1.227|0.455|0.386|0.449|1.234|0.446|0.395|0.453|1.230|0.449|0.392|0.451|0.390|0.449|1.233|0.450|0.392|0.448|0.392|0.448|1.235|0.448|1.234|0.453|0.389|0.455|0.386|0.449|0.392|0.450|0.390|0.453|0.388|0.450|0.391|0.449|1.239|0.448|0.388|0.452|1.231|0.455|0.387|0.450|1.232|0.453|0.388|0.454|0.387|0.451|0.389|0.455|0.386|0.451|1.233|0.444|1.237|0.455|0.386|0.448|0.393|0.449|0.392|0.453|0.387|0.454|0.387|0.448|0.393|0.451|0.390|0.454|1.228|0.460|0.380|0.452|1.231|0.455|0.386|0.450|0.390|0.455|0.386|0.455|1.229|0.449|1.232|0.451|1.232|0.455|0.386|0.445|74.872|3.445|1.661|0.444|0.396|0.446|0.395|0.448|1.234|0.449|0.392|0.453|1.230|0.455|0.386|0.456|1.227|0.447|0.397|0.446|0.391|0.448|1.235|0.449|0.392|0.451|0.390|0.450|1.232|0.455|1.228|0.452|0.388|0.452|0.389|0.451|0.394|0.449|0.387|0.453|0.388|0.453|0.387|0.452|1.230|0.458|0.382|0.447|1.236|0.452|0.388|0.448|1.234|0.451|0.394|0.443|0.394|0.450|0.390|0.446|0.395|0.449|1.233|0.452|1.230|0.452|0.388|0.454|0.387|0.451|0.390|0.450|0.390|0.454|0.386|0.450|0.391|0.449|0.392|0.451|1.232|0.459|0.383|0.457|1.225|0.459|0.382|0.448|0.394|0.454|0.386|0.453|1.233|0.452|1.227|0.454|1.229|0.456|0.385|0.451"
        private val volUp = "3.504|1.616|0.479|0.361|0.472|0.369|0.462|1.222|0.456|0.385|0.455|1.227|0.453|0.388|0.450|1.233|0.444|0.397|0.449|0.392|0.452|1.235|0.443|0.393|0.453|0.388|0.452|1.231|0.444|1.238|0.450|0.390|0.452|0.389|0.448|0.393|0.448|0.392|0.451|0.391|0.451|0.394|0.447|1.232|0.452|0.388|0.450|1.232|0.453|0.387|0.451|1.232|0.455|0.386|0.454|0.387|0.448|0.393|0.454|0.391|0.447|0.389|0.451|1.231|0.454|0.387|0.456|0.385|0.455|0.385|0.449|0.391|0.455|0.387|0.451|0.390|0.450|0.391|0.449|1.238|0.452|0.384|0.448|1.234|0.453|0.388|0.451|0.390|0.451|0.390|0.456|1.227|0.452|0.389|0.451|1.232|0.455|0.385|0.453|74.505|3.447|1.659|0.447|0.392|0.446|0.394|0.450|1.233|0.444|0.396|0.449|1.234|0.452|0.389|0.448|1.234|0.450|0.391|0.455|0.387|0.447|1.235|0.448|0.393|0.455|0.385|0.450|1.233|0.450|1.232|0.455|0.386|0.451|0.390|0.449|0.392|0.455|0.385|0.451|0.390|0.453|0.387|0.455|1.228|0.452|0.389|0.450|1.232|0.452|0.389|0.454|1.229|0.453|0.391|0.449|0.388|0.451|0.390|0.451|0.390|0.454|0.387|0.451|1.238|0.445|0.390|0.450|0.390|0.452|0.389|0.452|0.389|0.452|0.388|0.449|0.391|0.454|0.387|0.451|1.231|0.450|0.391|0.449|1.233|0.457|0.384|0.453|0.387|0.449|0.392|0.452|1.230|0.453|0.392|0.451|1.227|0.454|0.386|0.45"
        private val volDown = "3.507|1.613|0.480|0.362|0.469|0.371|0.462|1.221|0.454|0.386|0.449|1.234|0.447|0.393|0.451|1.231|0.453|0.389|0.447|0.393|0.445|1.237|0.459|0.382|0.450|0.390|0.454|1.229|0.446|1.237|0.450|0.391|0.454|0.387|0.456|0.385|0.454|0.387|0.453|0.387|0.455|0.386|0.458|1.225|0.455|0.386|0.449|1.234|0.454|0.387|0.448|1.235|0.454|0.386|0.452|0.389|0.449|0.392|0.452|1.235|0.442|0.394|0.451|1.232|0.453|0.388|0.448|0.392|0.453|0.388|0.454|0.386|0.451|0.390|0.453|0.387|0.455|0.387|0.447|1.240|0.448|0.388|0.453|1.230|0.452|0.389|0.454|0.388|0.449|0.391|0.452|0.389|0.450|0.390|0.456|1.227|0.455|0.390|0.449|74.507|3.449|1.660|0.440|0.395|0.444|0.397|0.450|1.232|0.451|0.390|0.449|1.234|0.452|0.389|0.449|1.232|0.447|0.394|0.454|0.391|0.450|1.229|0.452|0.389|0.455|0.385|0.448|1.235|0.452|1.230|0.454|0.387|0.455|0.386|0.452|0.389|0.449|0.395|0.441|0.396|0.453|0.388|0.449|1.234|0.447|0.393|0.448|1.235|0.455|0.385|0.452|1.231|0.453|0.389|0.455|0.386|0.452|0.389|0.452|1.231|0.450|0.391|0.454|1.229|0.455|0.386|0.451|0.390|0.453|0.389|0.450|0.391|0.452|0.389|0.458|0.383|0.455|0.386|0.449|1.234|0.452|0.388|0.453|1.230|0.453|0.387|0.453|0.388|0.455|0.386|0.450|0.391|0.452|0.388|0.459|1.224|0.449|0.392|0.450"
    }

    private fun signal(vararg values: String): String {
        var result = ""
        values.forEachIndexed { idx, value ->
            result += value
            if (idx < values.count() - 1) {
                result += pause
            }
        }
        return result
    }

    private fun repeatedSignal(count: Int, value: String): String {
        val list = mutableListOf<String>()
        for (i in 1..count) {
            list.add(value)
        }
        return signal(*list.toTypedArray())
    }

    override fun getDevices(): MutableList<V2Device> {
        val devices = mutableListOf<V2Device>()
        devices.add(BasicIRDevice("Audio Eins", signal(tuner, source)))
        devices.add(BasicIRDevice("Audio Zwei", signal(tuner, source, source)))
        devices.add(IRDevice("Subwoofer", sdb, repeatedSignal(5, sdb)))
        devices.add(HifiDevice())
        return devices
    }

    class HifiDevice : DeviceAdapter(), OnOff, Percentage {

        private var running = false

        override fun getName() = "Anlage"

        override fun turnOn() {
            if (!running) {
                mute.sendIR()
                running = !running
            }
        }

        override fun turnOff() {
            if (running) {
                mute.sendIR()
                running = !running
            }
        }

        override fun decrementPercentage(delta: Double) {
            object : Thread() {
                override fun run() {
                    val range = Math.round(delta)
                    for (i in 1..range) {
                        volDown.sendIR()
                    }
                }
            }.start()
        }

        override fun incrementPercentage(delta: Double) {
            object : Thread() {
                override fun run() {
                    val range = Math.round(delta)
                    for (i in 1..range) {
                        volUp.sendIR()
                    }
                }
            }.start()
        }

        override fun setPercentage(value: Double) {
            "ignoring setPercentage".log("Fernseher")
        }
    }
}